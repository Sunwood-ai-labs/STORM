import os
from pathlib import Path
from pptx import Presentation
from pptx.util import Inches, Pt
from pptx.enum.text import PP_ALIGN
from bs4 import BeautifulSoup
import markdown
from loguru import logger
from art import text2art

class PowerPointConverter:
    def __init__(self, template_path="template.pptx"):
        print(text2art("PowerPoint Converter", font="slant"))
        self.template_path = template_path
        logger.info(f"PowerPointコンバーターを初期化しました。テンプレート: {template_path}")

    def markdown_to_html(self, markdown_text):
        html = markdown.markdown(markdown_text, extensions=['extra'])
        return html

    def html_to_ppt(self, html, output_file):
        soup = BeautifulSoup(html, 'html.parser')
        prs = Presentation(self.template_path)

        # タイトルスライドの作成
        title_slide = soup.find('h1')
        if title_slide:
            self._create_title_slide(prs, title_slide.text)

        slides = soup.find_all('hr')
        slides.append(None)  # 最後のスライドを処理するためのダミー要素

        for i in range(len(slides) - 1):
            content = self._get_slide_content(slides[i], slides[i+1])
            self._create_content_slide(prs, content)

        prs.save(output_file)
        logger.success(f"PowerPointファイルを保存しました: {output_file}")

    def _get_slide_content(self, start, end):
        content = []
        current = start.next_sibling if start else None
        while current and current != end:
            if current.name:
                content.append(current)
            current = current.next_sibling
        return content

    def _create_title_slide(self, prs, title_text):
        title_slide_layout = prs.slide_layouts[0]
        slide = prs.slides.add_slide(title_slide_layout)
        title = slide.shapes.title
        subtitle = slide.placeholders[1]

        title.text = title_text
        subtitle.text = "Generated by STORM"

    def _create_content_slide(self, prs, content):
        slide_layout = prs.slide_layouts[1]  # タイトルとコンテンツのレイアウト
        slide = prs.slides.add_slide(slide_layout)

        title = None
        body_content = []

        for elem in content:
            if elem.name == 'h2' and title is None:
                title = elem.text
            else:
                body_content.append(elem)

        if title:
            title_shape = slide.shapes.title
            title_shape.text = title

        body_shape = slide.shapes.placeholders[1]
        tf = body_shape.text_frame

        for elem in body_content:
            if elem.name in ['h2', 'h3', 'h4']:
                p = tf.add_paragraph()
                p.text = elem.text
                p.level = int(elem.name[1]) - 2
            elif elem.name == 'p':
                p = tf.add_paragraph()
                p.text = elem.text
            elif elem.name in ['ul', 'ol']:
                for li in elem.find_all('li'):
                    p = tf.add_paragraph()
                    p.text = li.text.strip()  # マークダウンの箇条書きマーカーを削除
                    p.level = 1

    def convert(self, input_file, output_file):
        logger.info(f"変換を開始します: {input_file} -> {output_file}")
        with open(input_file, 'r', encoding='utf-8') as f:
            markdown_text = f.read()

        html = self.markdown_to_html(markdown_text)
        self.html_to_ppt(html, output_file)
        logger.success("変換が完了しました")

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Markdown to PowerPoint converter")
    parser.add_argument("-i", "--input", default="slides.md", help="Input Markdown file")
    parser.add_argument("-o", "--output", default="output.pptx", help="Output PowerPoint file")
    parser.add_argument("-t", "--template", default="template.pptx", help="PowerPoint template file")

    args = parser.parse_args()

    converter = PowerPointConverter(template_path=args.template)
    converter.convert(args.input, args.output)